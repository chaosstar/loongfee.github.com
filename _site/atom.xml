<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>FlyingLoong</title>
 <link href="http://loongfee.github.io/atom.xml" rel="self"/>
 <link href="http://loongfee.github.io"/>
 <updated>2013-08-02T23:17:28+08:00</updated>
 <id>http://loongfee.github.io</id>
 <author>
   <name>loongfee</name>
   <email>loongfee@gmail.com</email>
 </author>

 
 <entry>
   <title>让Jekyll将Pandoc作为Markdown的渲染器</title>
   <link href="http://loongfee.github.io/blog/2013/08/02/new-post"/>
   <updated>2013-08-02T00:00:00+08:00</updated>
   <id>hhttp://loongfee.github.io/blog/2013/08/02/new-post</id>
   <content type="html">&lt;script type=&quot;text/javascript&quot; src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;
&lt;/script&gt;

&lt;h1 id=&quot;jekyll的渲染器&quot;&gt;Jekyll的渲染器&lt;/h1&gt;
&lt;p&gt;Jekyll中默认的markdown渲染器是&lt;code&gt;maruku&lt;/code&gt;，但是它对Latex公式和中文支持都不太好, 通常是根据不同的需要选择其它几种渲染器（&lt;code&gt;rdiscount&lt;/code&gt;，&lt;code&gt;kramdown&lt;/code&gt;，&lt;code&gt;redcarpet&lt;/code&gt;等），它们各有利弊。Github在后台则选用了&lt;code&gt;Redcarpet&lt;/code&gt;作为其文本渲染器，因为它安全性高且性能卓越，同时它在基本&lt;code&gt;Markdown&lt;/code&gt;语法的基础上增加了一些自己的特性。&lt;code&gt;Kramdown&lt;/code&gt;是这几个当中对基础 &lt;code&gt;Markdown&lt;/code&gt;语法拓展最多，也是最方便使用的&lt;sup&gt;&lt;a href=&quot;#fn1&quot; class=&quot;footnoteRef&quot; id=&quot;fnref1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;（但是跟&lt;code&gt;Pandoc&lt;/code&gt;相比，还是差得很远）。笔者之前一直是使用&lt;code&gt;rdiscount&lt;/code&gt;，结果在本地编译没问题的代码在Github上就是无法通过，折腾了半天知道Github上的&lt;code&gt;rdiscount&lt;/code&gt;是1.6.8版本，而本地&lt;code&gt;rdiscount&lt;/code&gt;是2.1.6版本。下降版本后发现&lt;code&gt;rdiscount&lt;/code&gt;1.6.8版本不支持注脚语法。使用低版本就无法使用注脚，使用高版本就无法在Github上编译通过，纠结之余开始寻找合适的解决方案，于是就有了这篇文章。&lt;/p&gt;
&lt;h1 id=&quot;为什么使用pandoc&quot;&gt;为什么使用pandoc&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://johnmacfarlane.net/pandoc&quot;&gt;&lt;code&gt;Pandoc&lt;/code&gt;&lt;/a&gt;被称为格式转换的瑞士军刀，功能强大，能够在数十种文件格式（如Markdown，reStructuredText，Textilte，HTML，LaTeX，pdf，doc等）中自如的转换，几乎能做到无缝兼容，且成熟稳定。使用&lt;a href=&quot;http://johnmacfarlane.net/pandoc&quot;&gt;&lt;code&gt;Pandoc&lt;/code&gt;&lt;/a&gt;在Markdown文件中直接使用Latex公式，然后通过MathJax、jsMath 等等方式显示公式。例如使用下面一段Latex代码&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;latex&quot;&gt;&lt;span class=&quot;sb&quot;&gt;$$&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;e^{i&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;\pi&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;就可以得到一个优美的公式： &lt;span class=&quot;math&quot;&gt;\[e^{i\pi}+1=0\]&lt;/span&gt; &lt;em&gt;为了能让公式在网页中显示，请在markdown文件头加上以下调用MathJax的代码。&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;因此选用&lt;a href=&quot;http://johnmacfarlane.net/pandoc&quot;&gt;&lt;code&gt;Pandoc&lt;/code&gt;&lt;/a&gt;作为Jekyll中markdown的渲染器是很自然的。 但是Github Pages并没有提供pandoc的支持，也就是说使用&lt;a href=&quot;http://johnmacfarlane.net/pandoc&quot;&gt;&lt;code&gt;Pandoc&lt;/code&gt;&lt;/a&gt;的网站代码在Github上是无法编译的，以后会谈到如何解决这个问题。下面先看看如何配置环境将&lt;a href=&quot;http://johnmacfarlane.net/pandoc&quot;&gt;&lt;code&gt;Pandoc&lt;/code&gt;&lt;/a&gt;作为Markdown的渲染器。&lt;/p&gt;
&lt;h1 id=&quot;配置pandoc环境&quot;&gt;配置Pandoc环境&lt;/h1&gt;
&lt;ol style=&quot;list-style-type: decimal&quot;&gt;
&lt;li&gt;&lt;p&gt;首先当然是安装&lt;a href=&quot;http://johnmacfarlane.net/pandoc&quot;&gt;&lt;code&gt;Pandoc&lt;/code&gt;&lt;/a&gt;： Windows下直接从&lt;a href=&quot;http://johnmacfarlane.net/pandoc/&quot;&gt;pandoc官网&lt;/a&gt;下载&lt;a href=&quot;http://code.google.com/p/pandoc/downloads/&quot;&gt;最新安装包&lt;/a&gt;安装即可。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装Pandoc-Ruby。这里假设已经转好Ruby、Jekyll等环境了，如果还没有安装情参考&amp;lt;&amp;gt;。&lt;br /&gt;直接使用以下命令即可安装Pandoc-Ruby&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;gem install pandoc-ruby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ol start=&quot;3&quot; style=&quot;list-style-type: decimal&quot;&gt;
&lt;li&gt;&lt;p&gt;安装Jekyll插件。直接从Github站点 &lt;a href=&quot;https://github.com/dsanson/jekyll-pandoc-plugin&quot;&gt;Jekyll Plugin for Using Pandoc-Ruby&lt;/a&gt;下载&lt;code&gt;pandoc_markdown.rb&lt;/code&gt;放到网站根目录下的&lt;code&gt;_plugins&lt;/code&gt;文件夹中（如果&lt;code&gt;_plugins&lt;/code&gt;文件夹不存在，就创建一个），Jekyll在每次编译生成网站前都会自动加载&lt;code&gt;_plugins&lt;/code&gt;文件夹中的所有&lt;code&gt;*.rb&lt;/code&gt;文件。Jekyll官网&lt;sup&gt;&lt;a href=&quot;#fn2&quot; class=&quot;footnoteRef&quot; id=&quot;fnref2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;上有该插件的相关介绍，同时也给出了其它的解决方案。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在网站配置文件&lt;code&gt;_config.yml&lt;/code&gt;中添加设置Markdown的渲染器为&lt;code&gt;Pandoc&lt;/code&gt;。添加以下配置即可&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;markdown: pandoc
pandoc:
  format: html5
  extensions: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;smart, mathjax&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h1 id=&quot;一些修改&quot;&gt;一些修改&lt;/h1&gt;
&lt;p&gt;理论上经过以上的配置就可以使用&lt;code&gt;pandoc&lt;/code&gt;渲染&lt;code&gt;Markdown&lt;/code&gt;了，可是事情似乎并没有这么简单，执行&lt;code&gt;jekyll server&lt;/code&gt;命令后，出现了下面的错误&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Conversion error: There was an error converting .....
: undefined method &lt;span class=&quot;s1&quot;&gt;&amp;#39;convert&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;:smart, :mathjax&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;:Array. Use --trace to view backtrace
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;下载&lt;a href=&quot;/assets/share/markdown.rb&quot;&gt;文件&lt;/a&gt;替换&lt;code&gt;lib/jekyll/converters/markdown.rb&lt;/code&gt;即可，修改之处是在&lt;code&gt;setup&lt;/code&gt;和&lt;code&gt;convert&lt;/code&gt;中按照其它渲染器的格式增加一个&lt;code&gt;pandoc&lt;/code&gt;判断。&lt;br /&gt;至此，我们已尽可以在本地Jekyll中使用&lt;code&gt;Pandoc&lt;/code&gt;作为&lt;code&gt;Markdown&lt;/code&gt;的渲染器了，至于&lt;code&gt;Github Page&lt;/code&gt;不能编译通过的问题下次再讨论。&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot;&gt;&lt;p&gt;为Jekyll装上瑞士军刀Pandoc: &lt;a href=&quot;http://yangzetian.github.io/2012/04/15/jekyll-pandoc/&quot;&gt;http://yangzetian.github.io/2012/04/15/jekyll-pandoc/&lt;/a&gt; &lt;a href=&quot;http://varunbpatil.github.io/2013/07/06/jekyll-build-fail/#.Ufune48lzRd&quot;&gt;http://varunbpatil.github.io/2013/07/06/jekyll-build-fail/#.Ufune48lzRd&lt;/a&gt;&lt;a href=&quot;#fnref1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn2&quot;&gt;&lt;p&gt;Jekyll Plugins: &lt;a href=&quot;http://jekyllrb.com/docs/plugins/&quot;&gt;http://jekyllrb.com/docs/plugins/&lt;/a&gt;&lt;a href=&quot;#fnref2&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>利用Pandoc将markdown文件转化为pdf</title>
   <link href="http://loongfee.github.io/blog/2013/07/31/pandoc"/>
   <updated>2013-07-31T00:00:00+08:00</updated>
   <id>hhttp://loongfee.github.io/blog/2013/07/31/pandoc</id>
   <content type="html">&lt;h1 id=&quot;准备工作&quot;&gt;准备工作&lt;/h1&gt;
&lt;h2 id=&quot;安装pandoc&quot;&gt;安装pandoc&lt;/h2&gt;
&lt;p&gt;Windows下安装pandoc很容易，直接从&lt;a href=&quot;http://johnmacfarlane.net/pandoc/&quot;&gt;pandoc官网&lt;/a&gt;上下载&lt;a href=&quot;http://code.google.com/p/pandoc/downloads/&quot;&gt;最新安装包&lt;/a&gt;安装即可。&lt;br /&gt;Linux下的安装可以参考阳志平的博文&lt;sup&gt;&lt;a href=&quot;#fn1&quot; class=&quot;footnoteRef&quot; id=&quot;fnref1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h2 id=&quot;安装miktex&quot;&gt;安装MiKTeX&lt;/h2&gt;
&lt;p&gt;pandoc被称为格式转换的瑞士军刀&lt;sup&gt;&lt;a href=&quot;#fn2&quot; class=&quot;footnoteRef&quot; id=&quot;fnref2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。执行程序文件只有20M左右大小，但是能够在几十种文件格式之间自如的转换，那当然是得依赖各种格式文件所需要库。转换为pdf就要用到MiKTeX，Windows下推荐使用CTeX完整版，对中文的支持很好，可以从&lt;a href=&quot;http://www.ctex.org/HomePage&quot;&gt;CTeX官网&lt;/a&gt;下载&lt;a href=&quot;http://ftp.ctex.org/pub/tex/systems/ctex/2.9/CTeX_2.9.2.164_Full.exe&quot;&gt;完整套件&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&quot;将markdown文件转换为pdf&quot;&gt;将markdown文件转换为pdf&lt;/h1&gt;
&lt;p&gt;如果markdown文件中不包含中文字符，那么直接使用下面的命令就可以将markdown文件无缝转换为Latex支持的pdf文件。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;pandoc infile.md -o outfile.pdf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果markdown文件中包含中文字字符，那么上段命令就无法直接转换，可能会报以下错误：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;! Package inputenc Error: Unicode char \u8:鍒?not set up for use with LaTex.
pandoc: Error producing PDF from Tex source.    
See the inputsnc package documentation for explanation.   
... &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;为了解决中文编译的问题，需要做以下的工作：&lt;/p&gt;
&lt;h2 id=&quot;将markdown文档的编码方式改为utf-8&quot;&gt;将markdown文档的编码方式改为utf-8&lt;/h2&gt;
&lt;p&gt;比较简单的办法就是用记事本打开该文档，然后另存为时选择编码方式为utf-8。有可能当你改变编码方式后，文档中的中文全变成乱码了。为避免这种情况，可以在改变编码方式之前先复制文档的全部内容，然后在改变编码方式之后粘贴替换文档中的全木内容，这样就不会出现乱码了。&lt;/p&gt;
&lt;h2 id=&quot;修改latex引擎&quot;&gt;修改Latex引擎&lt;/h2&gt;
&lt;p&gt;编译pandoc默认的latex引擎是pdflatex，是不支持中文的，因此需要手动设置编译时所用的引擎为xelatex，编译命令改为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;pandoc infile.md -o outfile.pdf --latex-engine&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xelatex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;中文字体&quot;&gt;中文字体&lt;/h2&gt;
&lt;p&gt;这时编译可能没有错误了，但是得到的pdf文档中可能所有的中文都没有了。这是字体的问题，因为编译时默认的字体时不支持中文的，所以我们得手动设置中文字体。显然，所设的字体应该为系统中已装的字体，且字体的名字不能写错。有一个办法可以的到系统中所安装的所有字体名（见&lt;a href=&quot;http://blog.sina.com.cn/s/blog_5ee56d4501019ys8.html&quot;&gt;博文&lt;/a&gt;），即在控制台中输入命令：&lt;code&gt;fc-list &amp;gt;&amp;gt; C:\fonts.txt&lt;/code&gt;。这样，扫到的字体信息就全部被导入到C盘根目录下的fonts.txt文件中了。这里我们选择宋体，字体名称为“SimSun”，于是编译命令改为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;pandoc infile.md -o outfile.pdf --latex-engine&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xelatex -V &lt;span class=&quot;nv&quot;&gt;mainfont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;SimSun&amp;quot;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注意：命令中的“V”是大写&lt;/em&gt;&lt;br /&gt;这里字体名也可以不加&lt;strong&gt;双&lt;/strong&gt;引号，但是如果字体名比较复杂（如包含空格）时，不加双引号就可能出错。&lt;/p&gt;
&lt;h2 id=&quot;使用模板&quot;&gt;使用模板&lt;/h2&gt;
&lt;p&gt;好了，中文字符应该能够显示了，但是你可能会发现很多文字已经超出了文档的边界无法显示了，这是因为pandoc对中文的支持不太好，不能自动换行。但是这并不表示pandoc就真的无法完美处理中文文档了，因为技术界那些追求完美的极客们为我们提供了无限的可能。这篇博文介绍了pandoc中文pdf转换攻略&lt;sup&gt;&lt;a href=&quot;#fn3&quot; class=&quot;footnoteRef&quot; id=&quot;fnref3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;，解决方案是使用网友编辑好的latex模板来生成pdf，这里用到的是&lt;a href=&quot;https://github.com/tzengyuxio&quot;&gt;tzengyuxio&lt;/a&gt;提供的pm-template.latex&lt;sup&gt;&lt;a href=&quot;#fn4&quot; class=&quot;footnoteRef&quot; id=&quot;fnref4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;。 下载模板后将其中的&lt;code&gt;LiHei Pro&lt;/code&gt;字体替换成系统中安装有的中文字体即可，然后编译命令改为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;pandoc infile.md -o outfile.pdf --latex-engine&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xelatex -template&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;pm-template.latex
 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;注意：如果安装的MiKTeX（我用的是CTex）宏包不全，编译可能会出问题，如找不到&lt;code&gt;exp13.sty&lt;/code&gt;等，因此推荐安装完整版的MiKTex。&lt;/em&gt;&lt;br /&gt;当然，你也可以使用自己定义的模板来生成tex和pdf文件。首先使用命令&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;pandoc -D latex &amp;gt; my.latex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;生成一个默认的模板，再对这个模板进行修改，如字体、自动换行等。&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot;&gt;&lt;p&gt;Markdown写作进阶：Pandoc入门浅谈: &lt;a href=&quot;http://www.yangzhiping.com/tech/pandoc.html&quot;&gt;http://www.yangzhiping.com/tech/pandoc.html&lt;/a&gt;&lt;a href=&quot;#fnref1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn2&quot;&gt;&lt;p&gt;黑魔法利器pandoc: &lt;a href=&quot;http://yanping.me/cn/blog/2012/03/13/pandoc/&quot;&gt;http://yanping.me/cn/blog/2012/03/13/pandoc/&lt;/a&gt;&lt;a href=&quot;#fnref2&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn3&quot;&gt;&lt;p&gt;pandoc中文pdf转换攻略：&lt;a href=&quot;http://afoo.me/2013-07-10-how-to-transform-chinese-pdf-with-pandoc.html&quot;&gt;http://afoo.me/2013-07-10-how-to-transform-chinese-pdf-with-pandoc.html&lt;/a&gt;&lt;a href=&quot;#fnref3&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn4&quot;&gt;&lt;p&gt;pm-template GitHub: &lt;a href=&quot;https://github.com/tzengyuxio/pages/tree/gh-pages/pandoc&quot;&gt;https://github.com/tzengyuxio/pages/tree/gh-pages/pandoc&lt;/a&gt;&lt;a href=&quot;#fnref4&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyll上手篇</title>
   <link href="http://loongfee.github.io/blog/2013/07/31/jekyll"/>
   <updated>2013-07-31T00:00:00+08:00</updated>
   <id>hhttp://loongfee.github.io/blog/2013/07/31/jekyll</id>
   <content type="html">&lt;h2 id=&quot;启动本地jekyll服务run-jekyll-locallychengxuyuan&quot;&gt;启动本地Jekyll服务（Run Jekyll Locally）&lt;sup&gt;&lt;a href=&quot;#fn1&quot; class=&quot;footnoteRef&quot; id=&quot;fnref1&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;USERNAME.github.com
jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其中，&lt;code&gt;USERNAME&lt;/code&gt;是你的github博客用户名，也就是说需要先定位到本地博客的根目录下。 然后，就可以通过&lt;http://localhost:4000/&gt;来访问你的博客了。&lt;/p&gt;
&lt;h2 id=&quot;停止本地jekyll服务stop-jekyll-locally&quot;&gt;停止本地Jekyll服务（Stop Jekyll Locally）&lt;/h2&gt;
&lt;p&gt;在控制台窗口中使用快捷键来停止服务：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Ctrl+C&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;创建一个post&quot;&gt;创建一个post&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;rake post &lt;span class=&quot;nv&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;
 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&quot;创建一个page&quot;&gt;创建一个page&lt;/h2&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;rake page &lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;about.md&amp;quot;&lt;/span&gt;
 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&quot;删除post或page&quot;&gt;删除post或page&lt;/h2&gt;
&lt;p&gt;直接删除相应的post文件即可删除一个post&lt;sup&gt;&lt;a href=&quot;#fn2&quot; class=&quot;footnoteRef&quot; id=&quot;fnref2&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h2 id=&quot;上传新添加的内容&quot;&gt;上传新添加的内容&lt;/h2&gt;
&lt;p&gt;只需要将新添加的内容上传到Github，Jekyll就可以帮我们生成相应的网页了。上传内容的命令如下。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;git add .
git commit -m &lt;span class=&quot;s2&quot;&gt;&amp;quot;Add new content&amp;quot;&lt;/span&gt;
git push origin master
 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id=&quot;中文编码问题&quot;&gt;中文编码问题&lt;/h2&gt;
&lt;p&gt;修改&lt;code&gt;convertible.rb&lt;/code&gt;文件中的以下行&lt;sup&gt;&lt;a href=&quot;#fn3&quot; class=&quot;footnoteRef&quot; id=&quot;fnref3&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;sup&gt;,&lt;/sup&gt; &lt;sup&gt;&lt;a href=&quot;#fn4&quot; class=&quot;footnoteRef&quot; id=&quot;fnref4&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
 

&lt;p&gt;加入utf-8支持，改后为：&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:encoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;改后即可正常处理包含中文的post。 如果编译出现如下错误&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;Liquid Exception: incompatible character encodings: UTF-8 and GBK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;可以尝试更改控制台编码：&lt;code&gt;chcp 65001&lt;/code&gt;，改后控制台变得比较丑，但总算能解决中文编码问题。&lt;/p&gt;
&lt;div class=&quot;footnotes&quot;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&quot;fn1&quot;&gt;&lt;p&gt;利用Jekyll搭建个人博客:&lt;a href=&quot;http://www.mceiba.com/develop/jekyll-introduction.html&quot;&gt;http://www.mceiba.com/develop/jekyll-introduction.html&lt;/a&gt;&lt;a href=&quot;#fnref1&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn2&quot;&gt;&lt;p&gt;Blogging using your favorite Text editor with Git and Jekyll: &lt;a href=&quot;http://truongtx.me/2013/05/08/blogging-using-your-favorite-text-editor-with-git-and-jekyll/&quot;&gt;http://truongtx.me/2013/05/08/blogging-using-your-favorite-text-editor-with-git-and-jekyll/&lt;/a&gt;&lt;a href=&quot;#fnref2&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn3&quot;&gt;&lt;p&gt;Jekyll对中文问题的处理:&lt;a href=&quot;http://nepshi.com/2012-10-08/chinese-characters-in-jekyll/&quot;&gt;http://nepshi.com/2012-10-08/chinese-characters-in-jekyll/&lt;/a&gt;&lt;a href=&quot;#fnref3&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li id=&quot;fn4&quot;&gt;&lt;p&gt;win7使用jekyll的中文编码问题: &lt;a href=&quot;http://www.oschina.net/question/195686_72215&quot;&gt;http://www.oschina.net/question/195686_72215&lt;/a&gt;&lt;a href=&quot;#fnref4&quot;&gt;↩&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>使用GitHub管理你的工程</title>
   <link href="http://loongfee.github.io/blog/2013/07/31/github"/>
   <updated>2013-07-31T00:00:00+08:00</updated>
   <id>hhttp://loongfee.github.io/blog/2013/07/31/github</id>
   <content type="html">&lt;p&gt;无可非议，这是一个计算机的时代，也是一个代码的时代。作为一个资深码农，你一定写过无数段小代码，无数个小程序了，实际应用中需要用到的很多代码段或者小工具都可以从自己积累的程序中直接拿出来。然而事实并没有这么简单，你可能需要在不同的电脑上编写程序，你也可能根据实际使用的情况对你以前的代码进行修改，随之而来的就是&lt;strong&gt;“版本灾难”&lt;/strong&gt;，这往往是令人抓狂的。另外，现在软件项目越来越大，大多数实际项目已经不再像过去那样只需要一两个人就能完成了。不同的人在不同的终端上几乎同时地对同一个项目进行编辑，可想而知，版本的管理将是多么繁琐的一件事情。那么有没有什么方法可以高效地管理你的工程呢？这就是这篇文章要解决的问题。&lt;/p&gt;
&lt;h2 id=&quot;github是什么&quot;&gt;GitHub是什么&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;是一家公司，位于旧金山，由&lt;a href=&quot;https://github.com/defunkt&quot;&gt;Chris Wanstrath&lt;/a&gt;, &lt;a href=&quot;https://github.com/pjhyett&quot;&gt;PJ Hyett&lt;/a&gt; 与&lt;a href=&quot;https://github.com/mojombo&quot;&gt;Tom Preston-Werner&lt;/a&gt;三位开发者在2008年4月创办。迄今拥有59名全职员工，主要提供基于Git的版本托管服务。GitHub是目前最流行的开源托管服务，已经成为全球最大的开源项目聚集地。GitHub的服务分为免费和收费两种。免费账号可以自由的发布项目（不过每个项目有100M的大小限制），并且所发布的项目必须是公开源码的。付费账号则可以发布私有的项目。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于一般的开源项目的用户而言，100M的大小是足够的。但如果你的代码是商业保密的或者你的项目非常的大，那么你就需要成为付费用户以便GitHub不公开你的源代码或者提供更大的存储空间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好的，下面就从注册GitHub账号开始，逐步介绍如何使用GitHub管理你的软件项目。GitHub的平台无关性表现非常好，但是本文只介绍windows下的使用方法。&lt;/p&gt;
&lt;h2 id=&quot;注册github账号&quot;&gt;注册GitHub账号&lt;/h2&gt;
&lt;p&gt;打开&lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;网站的主页，按照提示输入待注册的用户名、邮箱和密码，然后点“Sign up for GitHub”，如下图所示。&lt;img src=&quot;/assets/images/20130801-sign_up.png&quot; alt=&quot;注册&quot; /&gt; 如果不出意外的话就注册成功了（如果你的密码设置的过于简单，可能会提示你重新设置密码）。对，就这么简单。&lt;/p&gt;
&lt;h2 id=&quot;github工具&quot;&gt;GitHub工具&lt;/h2&gt;
&lt;p&gt;GitHub最初是在linux下面使用的，一切操作都是用命令来实现的，对于windows用户来说还是很不方便的。好在GitHub最近发布了一个windows下的管理工具，操作简单直观，界面是metro UI 风格，推荐使用这个管理工具。相关说明和下载地址如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;官方就这个工具发布的说明：&lt;a href=&quot;https://github.com/blog/1127-github-for-windows&quot;&gt;https://github.com/blog/1127-github-for-windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官方网址：&lt;a href=&quot;http://windows.github.com/&quot;&gt;http://windows.github.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;点击此处下载：&lt;a href=&quot;http://github-windows.s3.amazonaws.com/setup.exe&quot;&gt;http://github-windows.s3.amazonaws.com/setup.exe&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下载的setup.exe是一个在线安装器，运行后会开始在线安装，安装过程可能需要几分钟（需要下载安装程序）。 安装完后会出现“Git Shell”和“GitHub”两个程序，其中“Git Shell”是命令行模式，“GitHub”是图形界面模式，这里打开“GitHub”，出现登录界面，如下图所示。 &lt;img src=&quot;/assets/images/20130801-github_login.png&quot; alt=&quot;登录客户端&quot; /&gt; ## 创建一个项目（Repositories）&lt;/p&gt;
</content>
 </entry>
 
 
</feed>